@model TourForEverybuddy.Models.User
@{
    ViewBag.Title = "Register";
    this.Layout = "~/Views/Shared/_GenericLayout.cshtml";
}

@Html.ValidationMessage("EmailIsHave", new { @style = "color: red; font-size: large;" })
@Html.ValidationMessage("ValidIsFailed", new { @style = "color: red; font-size: large;" })

<div class="RegisterDiv">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div>
            @Html.LabelFor(model => model.RouleId)
            <div class="4u 12u$(xsmall) checkBoxUser">
                @Html.RadioButtonFor(model => model.RouleId, 3, new { @style = "display: none;", @checked = true })
                <label for="RouleId">Tourist</label>
            </div>
            <div class="4u 12u$(xsmall) checkBoxGuied">
                @Html.RadioButtonFor(model => model.RouleId, 2, new { @id = "RouleId2", @style = "display: none" })
                <label for="RouleId2">Guide</label>
            </div>
            @Html.ValidationMessage("RouleId", "", new { @id = "validRoule", @class = "text-danger" })
        </div>

        @Html.Partial("_AccountPartial")

        <div class="ArrayLanguageList">
            @Html.Label("")
            @Html.DropDownList("Language", ViewBag.Languages as IEnumerable<SelectListItem>, "Not chosen")
            @for (int i = 0; i < 10; i++)
            {
                @Html.DropDownList("Language", ViewBag.Languages as IEnumerable<SelectListItem>, "Not chosen", new { @style = "display: none" })
            }
            <a onclick="AddChoiceLanguage()">Add language </a>
        </div>

        <div class="Passwords">
            @Html.LabelFor(model => model.Password)
            @Html.TextBox("Password", null, new { @type = "password", @onfocusout = "onFocusOutPassword()" })
            @Html.LabelFor(model => model.Password, "Confirm password")
            @Html.TextBox("Password", null, new { @id = "PasswordConfirm", @type = "password", @onfocusout = "onFocusOutPassword()" })

            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            @Html.ValidationMessage("PasswordCOnfirm", "", new { @id = "validPass", @class = "text-danger" })
        </div>

        <div style="margin-top: 20px;">
            @*The Agreement ... field is required.*@
            <input type="checkbox" id="CheckAgreement" onclick="Agreement()" /> <em>I accept the terms of @Html.ActionLink("Agreement", "agreement", null, new { @target = "blank" })</em>
            @Html.ValidationMessage("CheckAgreementValid", "", new { @id = "CheckAgreementValid", @class = "text-danger" })
        </div>
        <input id="ButtonCreate" type="submit" value="Create" onclick=" return PreClickRegister()" class="button special" />
    }
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/Elements/Register.js"></script>

@model TourForEverybuddy.Models.User

@{
    ViewBag.Title = "Edit";
    this.Layout = "~/Views/Shared/_GenericLayout.cshtml";
}
<link rel="stylesheet" href="~/Content/Elements/Profile.css" />
<link rel="stylesheet" href="~/Content/Elements/Regiser.css" />

@Html.ValidationMessage("EmailIsHave", new { @style = "color: red; font-size: large;" })
@Html.ValidationMessage("ValidIsFailed", new { @style = "color: red; font-size: large;" })

<p>
    @Html.ActionLink("Back to List", "Index", null, new { @style = "    margin-left: 25px;" })
</p>

<div class="RegisterDiv">

    @using (Html.BeginForm("Edit", "Account", null, FormMethod.Post, new { @class = "test", enctype = "multipart/form-data" }))
    {
        @Html.Hidden("id", Model.id)

        <div class="ImagesProfile">
            <img class="profileImage" src="@Url.Action("PictureForProfile", "Picture", new { userID = Model.id })"
                 alt="" />
        </div>
        <div class="file-input-wrapper">
            <button class="btn-file-input">Upload File</button>
            <input type="file" id="Picture" name="Picture" value="Загрузить фотки" accept="image/*" onchange="handleFileSelect(this);" />
        </div>
        <div class="images"><br /></div>

        @Html.Partial("_AccountPartial")

        <div class="ArrayLanguageList">
            @Html.Label("Language")

            @{

        var arrayLanguages = (ViewBag.ArrayLanguages as IQueryable<TourForEverybuddy.Models.UserLanguage>).ToList();
        for (int i = 0; i < arrayLanguages.Count(); i++)
        {
            @Html.DropDownList("Language", new SelectList(ViewBag.Languages, "id", "name", arrayLanguages[i].LanguageID))
        }

            }
            @for (int i = 0; i < (10 - arrayLanguages.Count); i++)
            {
                @Html.DropDownList("Language", new SelectList(ViewBag.Languages, "id", "name"), "Not chosen", new { @style = "display: none" })
            }

            <a onclick="AddChoiceLanguage()">Add language </a>
        </div>

        <div>
            @Html.LabelFor(model => model.About)
            @Html.EditorFor(model => model.About)
            @Html.ValidationMessageFor(model => model.About, "", new { @class = "text-danger" })
        </div>

        <lable onclick="ShowOrHideContainerPwd()">Change password ? </lable>
        <div class="Passwords DisabledPassword">
            @Html.LabelFor(model => model.Password)
            @Html.TextBox("Password", null, new { @type = "password", @onfocusout = "onFocusOutPassword()" })
            @Html.LabelFor(model => model.Password, "Confirm password")
            @Html.TextBox("Password", null, new { @id = "PasswordConfirm", @type = "password", @onfocusout = "onFocusOutPassword()" })

            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            @Html.ValidationMessage("PasswordCOnfirm", "", new { @id = "validPass", @class = "text-danger" })
        </div>

        <input type="submit" value="Save" />
    }

</div>

<script src="~/Scripts/Elements/Register.js"></script>
<script src="~/Scripts/Elements/Profile.js"></script>


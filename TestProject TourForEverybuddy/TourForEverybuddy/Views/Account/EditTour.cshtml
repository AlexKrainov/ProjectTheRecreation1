@model TourForEverybuddy.Models.Tour

@{
    ViewBag.Title = "EditTour";
    this.Layout = "~/Views/Shared/_GenericLayout.cshtml";
}
<link href="~/Content/Elements/Profile.css" rel="stylesheet" />
<link href="~/Content/Elements/Add_Edit_TourStyle.css" rel="stylesheet" />

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @style = "    margin-left: 25px;" })

</div>
<div id="tourDialog" class="container tourDialog">
    <section id="two" class="wrapper special" style="padding-top: 0; padding-bottom: 0;">
        <div class="inner">
            @using (Html.BeginForm("EditTour", "Account", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="file-input-wrapper">
                    <button class="btn-file-input">Upload image</button>
                    <input type="file" id="Pictures" name="Pictures" value="Загрузить фотки" multiple accept="image/*" onchange="handleFileSelect(this);" />
                </div>
                <div class="images"><br /></div>
                <div>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div>
                        <em>@Html.DisplayNameFor(model => model.title)</em>
                        <div>
                            @Html.TextBoxFor(model => model.title, new { @placeholder = "Enter you title", @onchange = "TextBoxChange()", @style = "margin: 10px auto 10px 0px;" })
                        </div>
                    </div>

                    <div>
                        <em>@Html.DisplayNameFor(model => model.description)</em>
                        <div>
                            @Html.TextAreaFor(model => model.description, new { @rows = "6", @placeholder = "Enter your massage", @onchange = "TextBoxChange()" })
                        </div>
                    </div>
                    <div>
                        <em class="em_for_editor_tour">@Html.DisplayNameFor(model => model.fullDescription)</em>
                        @Html.TextAreaFor(model => model.fullDescription, new { @rows = "6", @placeholder = "Enter your full description ... ", @onchange = "TextBoxChange()" })
                    </div>
                    <div class="rowTour">
                        <em class="em_for_editor_tour">@Html.DisplayNameFor(model => model.cityID)</em>
                        @Html.DropDownList("cityID", new SelectList(ViewBag.Cities, "id", "Name", Model.cityID))
                        @*@{

                            var arrayLanguages = (ViewBag.ArrayLanguages as IQueryable<TourForEverybuddy.Models.UserLanguage>).ToList();
                            for (int i = 0; i < arrayLanguages.Count(); i++)
                            {
                                @Html.DropDownList("Language", new SelectList(ViewBag.Languages, "id", "name", arrayLanguages[i].LanguageID))
                            }

                                    }*@
                    </div>
                    <div class="rowTour">
                        <em class="em_for_editor_tour">@Html.DisplayNameFor(model => model.durationID)</em>
                        @Html.DropDownList("durationID", new SelectList(ViewBag.Duration, "Id", "Time", Model.durationID))
                    </div>
                    <div class="rowTour">
                        <em class="em_for_editor_tour">@Html.DisplayNameFor(model => model.MaximumTravelers)</em>
                        @Html.TextBoxFor(model => model.MaximumTravelers, new { @type = "number" })
                    </div>
                    <div class="rowTour">
                        <em class="em_for_editor_tour">@Html.DisplayNameFor(model => model.price)</em>
                        @Html.TextBoxFor(model => model.price, new { @type = "number" }) <em class="em_for_editor_tour">$</em>
                    </div>
                    <div>
                        @*style="display: table; margin: 0 auto;"*@
                        @Html.Hidden("DaysOfTheWeek")
                        <div class="imgsDays" title="Select day of the week ... ">
                            @{
                var week = (List<TourForEverybuddy.Models.DaysOfTheWeek>)ViewBag.DayOfTheWeek;
                var weekTour = (List<TourForEverybuddy.Models.Tour_DaysOfTheWeek>)ViewBag.DaysOfTheWeekTour;
                for (int i = 0; i < week.Count; i++)
                {
                    var isSame = weekTour.FirstOrDefault(x => x.DaysOfTheWeekID == week[i].Id);
                    if (isSame != null)
                    {
                        <img id="@week[i].Id" src="@week[i].Path" title="@week[i].Name"
                             onclick="SelectDaysOfTheWeek(this)" style="opacity: 1;" />
                    }
                    else
                    {
                        <img id="@week[i].Id" src="@week[i].Path" title="@week[i].Name"
                             onclick="SelectDaysOfTheWeek(this)" style="opacity: .3;" />
                    }
                }
                            }
                        </div>
                        <div>
                            <div style="display: initial;">
                                <em id="displayNameStartsAt" class="em_for_editor_tour">@Html.DisplayNameFor(model => model.startsAt)  &nbsp;&nbsp;</em>

                                @Html.TextBox("startsAt", @Model.startsAt, new { @type = "time" })@*<em class="em_for_editor_tour">&nbsp;&nbsp;&nbsp;&nbsp;or&nbsp;</em>*@

                                @if (Model.startsAt == "Any time")
                                {
                                    @Html.Hidden("startAtHidden", "");
                                    @Html.CheckBox("isAnyTime", true, new { @onclick = "AnyTimeClick(this)" })
                                }
                                else
                                {
                                    @Html.Hidden("startAtHidden", Model.startsAt);
                                    @Html.CheckBox("isAnyTime", false, new { @onclick = "AnyTimeClick(this)" })
                                }

                                @*<input type="checkbox" id="isAnyTime" name="isAnyTime" onclick="AnyTimeClick(this)" style="display:none;" />*@
                                <label class="label_AnyTime" style="opacity:.3;" for="isAnyTime"><em class="em_for_editor_tour">any time </em></label>
                            </div>

                            @*@Html.CheckBox("isAnyTime", false, new { @onclick = "AnyTimeClick(this)", @value = "12:00" })<em class="em_for_editor_tour">any time </em>*@
                        </div>
                    </div>
                    <input class="button special" id="submitCreate" type="submit" style="margin-top: 15px;" value="Save" onclick="return CheckEmptyFild()" />
                    @Html.ValidationMessage("ValidIsFailed", new { @style = "color: red; font-size: large;", @id = "ValidIsFailed" })
                </div>
            }
        </div>
    </section>







    @using (Html.BeginForm("DeleteImages", "Account"))
    {
        @Html.Hidden("id", Model.Id);
        @Html.Hidden("PictureArray");
                   <!-- Two -->
        <section id="two" class="wrapper special" style="padding-top: 0;">
            <div class="inner">
                <header class="major narrow">
                    <h2>Album</h2>
                    <p>Select the pictures to delete</p>
                    <input id="RemoveBtn" type="submit" class="button disabled" value="Delete images" onclick="return RemovePicture(this);" />
                    @Html.ValidationMessage("DeletePicture", new { @style = "color: red; font-size: large;", @id = "DeletePicture" })
                </header>
                <div class="box alt">
                    <div class="row 50% uniform">
                        @foreach (TourForEverybuddy.Models.Tour_PictureOfTour picture in Model.Tour_PictureOfTour)
                        {
                            <div class="4u">
                                @*<a class="image" id="@picture.Id" onclick="SelectPicture(this)">*@
                                <span class="image fit" id="@picture.Id" onclick="SelectPicture(this)">
                                    <img src="@string.Concat("data:",picture.ContentType,";base64,") @Convert.ToBase64String(picture.Picture, 0, picture.Picture.Length)"
                                         alt="" />
                                </span>
                            </div>
                        }

                    </div>
                </div>
            </div>
        </section>
    }

</div>




@*<img src="@Url.Action("GetUrlFromPictureOfTour", "Picture", new { id = picture.Id } )" alt="" />*@
<script src="~/Scripts/Elements/Profile.js"></script>

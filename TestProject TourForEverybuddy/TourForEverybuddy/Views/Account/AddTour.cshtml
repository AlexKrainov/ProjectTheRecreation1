@model TourForEverybuddy.Models.Tour
@{
    this.Layout = "~/Views/Shared/_GenericLayout.cshtml";
}
<link href="~/Content/Elements/Profile.css" rel="stylesheet" />
<link href="~/Content/Elements/Add_Edit_TourStyle.css" rel="stylesheet" />
<br />
@Html.ActionLink("Back to List", "Index", null, new { @style = "    margin-left: 25px;" })

<div id="tourDialog" class="container tourDialog">

    @using (Html.BeginForm("AddTour", "Account", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <section id="one" class="wrapper" style="padding-top: 0;">
            <div class="inner">
                <div class="file-input-wrapper">
                    <button class="btn-file-input">Upload image</button>
                    <input type="file" id="Pictures" name="Pictures" value="Загрузить фотки" multiple accept="image/*" onchange="handleFileSelect(this);" />
                </div>
                @*<input class="button alt small" id="Pictures" name="Pictures" type="file" value="Загрузить фотки" multiple onchange="handleFileSelect(this);" />*@
                <div class="images"><br /></div>
                <em class="em_for_editor_tour">@Html.DisplayNameFor(model => model.title)</em>
                @Html.ValidationMessage("title", "", new { @class = "text-danger" })
                @Html.TextBox("title", null, new { @placeholder = "Enter you title", @onchange = "TextBoxChange()", @style = "margin: 10px auto 10px 0px;" })
                
                <div>
                    <em class="em_for_editor_tour">@Html.DisplayNameFor(model => model.description)</em>
                    @Html.TextArea("description", null, new { @rows = "2", @placeholder = "Enter your massage ... ", @onchange = "TextBoxChange()" })
                </div>
                <div>
                    <em class="em_for_editor_tour">@Html.DisplayNameFor(model => model.fullDescription)</em>
                    @Html.TextArea("fullDescription", null, new { @rows = "6", @placeholder = "Enter your full description ... ", @onchange = "TextBoxChange()" })
                </div>
                <div class="rowTour">
                    <em class="em_for_editor_tour">@Html.DisplayNameFor(model => model.cityID)</em>
                    @Html.DropDownList("cityID", new SelectList(ViewBag.Cities, "id", "Name"))
                </div>
                <div class="rowTour">
                    <em class="em_for_editor_tour">@Html.DisplayNameFor(model => model.durationID)</em>
                    @Html.DropDownList("durationID", new SelectList(ViewBag.Duration, "Id", "Time"))
                </div>
                <div class="rowTour">
                    <em class="em_for_editor_tour">@Html.DisplayNameFor(model => model.MaximumTravelers)</em>
                    @Html.TextBox("MaximumTravelers", "1", new { @type = "number" })
                </div>
                <div class="rowTour">
                    <em class="em_for_editor_tour">@Html.DisplayNameFor(model => model.price)</em>
                    @Html.TextBox("price", "1", new { @type = "number" }) <em class="em_for_editor_tour">$</em>
                </div>
                <div > @*style="display: table; margin: 0 auto;"*@
                    @Html.Hidden("DaysOfTheWeek")
                    <div class="imgsDays" title="Select day of the week ... ">
                        @{
        var week = (List<TourForEverybuddy.Models.DaysOfTheWeek>)ViewBag.DayOfTheWeek;
        for (int i = 0; i < week.Count; i++)
        {
            <img id="@week[i].Id" src="@week[i].Path" title="@week[i].Name" onclick="SelectDaysOfTheWeek(this)" style="opacity: .3" />
        }
                        }
                    </div>
                    <div>
                        <div style="display: initial;">
                            @Html.Hidden("startAtHidden", "12:00")
                            <em id="displayNameStartsAt" class="em_for_editor_tour">@Html.DisplayNameFor(model => model.startsAt)  &nbsp;&nbsp;</em>
                            @Html.TextBox("startsAt", null, new { @type = "time" })@*<em class="em_for_editor_tour">&nbsp;&nbsp;&nbsp;&nbsp;or&nbsp;</em>*@
                            @Html.CheckBox("isAnyTime", false, new { @onclick = "AnyTimeClick(this)" })
                            @*<input type="checkbox" id="isAnyTime" name="isAnyTime" onclick="AnyTimeClick(this)" style="display:none;"/>*@
                            <label class="label_AnyTime" style="opacity:.3;" for="isAnyTime"><em class="em_for_editor_tour">any time </em></label>
                        </div>
                       
                        @*@Html.CheckBox("isAnyTime", false, new { @onclick = "AnyTimeClick(this)", @value = "12:00" })<em class="em_for_editor_tour">any time </em>*@
                    </div>
                </div>
            </div>
            <input class="button special" id="submitCreate" type="submit" style="margin: 15px auto; display: block;"
                   value="Create" onclick="return CheckEmptyFildEdit()" />
            @Html.ValidationMessage("TourIsHave", new { @style = "color: red; font-size: large;" })
            @Html.ValidationMessage("ValidIsFailed", new { @style = "color: red; font-size: large;", @id = "ValidIsFailed" })
        </section>
    }

</div>
<script src="~/Scripts/Elements/Profile.js"></script>
@*<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.validate-vsdoc.js"></script>*@